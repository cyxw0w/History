클라우드를 쓰는 이유

지연시간을 개선하기 위해서
- 기존 방식은 p2p에 의존한 서버방식이였지만 
해당 문제는 각 지역에 따른 호스트 연결 문제에 있어 
쾌적한 서버 환경이 불가능

한 유저는 미국, 유럽, 한국이라할때 원할한 게임플레이 불가
클라우드사용시 플레이어들과 물리적으로 가까운 위치로 잡혀 가능

대규모의 게임 세션 운영
-한 세션에 여러 사용자가 이용할 경우 발생하는 여러문제가 있다.
p2p로 만들경우 게임 클라이언트에 의한 pc사양을 많이 잡는다

복잡한 백앤드 구성 단순
클라이언트에서 호스트 역할을 하는 자는 과도한 연산이 발생
이를 클라우드에서 해결 가능하다.

anti cheat
클라이언트를 까서 변수를 바꾸는 등으로 핵을 사용할 수 있다.
이를 모니터링해서 패킷 유효검사등을 통해 클라우드에서 해결 할 수 있다.

게임 개발환경 가속
p2p사용시 유선이 아닌 공유기 사용시 여러 네트워크 보안관련 사항이 있는데
이런 예외처리를 해줘야하는데 dmz같은거 
이를 해결할 수 있다.


---------------------------

온라인 게임 유형
세션형 (p2p) -> gamelift를 통해 손쉽게 배포가능
턴베이스 -> 비동기형, 동기화 빈도가 낮은것 -> gamelift realtime server에서 스크립트 빌드를 통해 사용이 가능하다.
mmorpg경우 세션처럼 사용하는 것이 아닌 24시간 연속적으로 관리
aws에서 제공하는 infrastructure이나 데이터베이스, 네트워킹 기능등을 통해 모니터링이 가능하다.

게임 개발환경 가속화
자동 스케일링이 가능하다.
서버가 1개에서 수만개로 증감이 가능하다. 플릿이란 단위로 프로세스 증설이 가능하다.

매치메이킹이 이미 빌트인으로 제공됨
얼마나 유사한 mmr을 가진 팀들을 매치시키느냐 -> FLEXMATCH가능
설정만하면 가능

무중단 업데이트 가능
점검할 필요없이 새 서버를 배포하고 적용이 가능

크로스플레이 지원

기존 엔진들
c++기반 게임엔진까지
클라우드서버상에서 운영가능

--------------
게임리프트

게임상에서
서버구동 서버 빌드

세션 핸들링에 해당하는 플릿

aliases를 통해 무중단 업데이트

queue 대기열에 머물다가 프로세스 연결

클라이언트 -

플렉스 매치

=============

빌드
aws cli나 sdk를 사용하여  빌드 가능

아마존 게임리프트 서버 sdk를 다운하여 
버전에 맞는 플러그인 에디터 실행 -> 활성화

sdk와 통합하면 실사용가능


플릿
게임 빌드를 통해서 어떻게 호스팅할지 가능
게임 로직에 따라 메모리나 cpu사용량이 많아지는데
그럴 경우 인스탄스 타입이나 사이즈를 늘릴 수 있어 해결할 수 있다.
배포지역
어느 시점에 얼마만큼 스케일링 타이밍
스케일링 capacity 한계 정해서 다음 세션으로
몇개의 서버의 프로세스를 몇개까지 띄울 것인가

플릿에 의한 모니터ㄷ
각 이벤트들을 모니터가 가능하다. 
스케일? 에러 크래시 워닝등
게임 세션의 정보를 실시간으로 확인할 수 있다.

각 플레이어에서 각 플레이어 정보들을 확인도 가능하다.


단계
실제로 개발자가 빌드를 해서 cli로 배포
인스탄스상에 해당 빌드를 가지고 프로세스를 배포
이 상태에서 플릿이 최초로 배포되고 프로세스 구동

이상태로 플레이어가 접속시
플레이어에게 접속이 필요한 정보를 전달
해당 유저는 ec2 instance에 해당하는 게임에 접속 
이상태에서 플레이어가 액티브상태로 되고
세션이 차일경우 게임이 시작

alias로 대상 플릿을 지정
심플, 터미널
심플 해당 알리아스로 연결요청시 연결
언제라도 업데이트 가능(운영중에도 가능)

터미널 메세지로 플릿으로 보다가 
정의된 메세지가 나가서(점검메세지)

개발자가 게임을 열어 빌드를 배포하고 플릿이 구동될때
알리아스를 통해서 새로운 사용자들은 클라이언트를 통해서 

기존의 플레이어들은 플릿a에서 사용
알리아스 바꾼사람들은 플릿b에서 사용

알리아스가 redirect를 통해서 플릿의 세션이 종료될때까지 
기다리고
중단된 플릿을 순차적으로 업데이트하면서 무중단 업데이트가 가능

터미널 메세지 알리아스를 터미널 메세지로 바꾸면 해당하는 
터미널 메세지 유지하다가 게임 세션이 0이되면 
터미널 메세지로 유지

queue
어느플릿으로 게임세션으로 배치할건가
시간제한 설정
어떤 플릿 우선으로 게임을 배치
지연시간처리

기본적으로 

